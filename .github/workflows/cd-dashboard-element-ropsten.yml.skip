name: CD Dashboard Element Ropsten

on:
  push:
    branches:
      - main

env:
  SERVICE: sidetree-element-ropsten
  REGION: us-central1
  PROJECT_ID: ${{ secrets.GCP_PROJECT }}
  GCP_SA_KEY: ${{ secrets.GCP_SA_KEY }}
  GCP_RUNNER_SA: ${{ secrets.GCP_SA_RUNNER }}
  SIDETREE_METHOD: 'elem:ropsten'
  MONGO_DB_CONNECTION_STRING: ${{ secrets.MONGO_DB_CONNECTION_STRING }}
  DATABASE_NAME: ${{ secrets.DATABASE_NAME }}
  MAX_CONCURRENT_DOWNLOADS: ${{ secrets.MAX_CONCURRENT_DOWNLOADS }}
  BATCH_INTERVAL_IN_SECONDS: ${{ secrets.BATCH_INTERVAL_IN_SECONDS }}
  OBSERVING_INTERVAL_IN_SECONDS: ${{ secrets.OBSERVING_INTERVAL_IN_SECONDS }}
  # element
  ELEMENT_CONTENT_ADDRESSABLE_STORE_SERVICE_URI: ${{ secrets.ELEMENT_CONTENT_ADDRESSABLE_STORE_SERVICE_URI }}
  ELEMENT_ANCHOR_CONTRACT: ${{ secrets.ELEMENT_ANCHOR_CONTRACT }}
  ETHEREUM_RPC_URL: ${{ secrets.ETHEREUM_RPC_URL }}
  ETHEREUM_PROVIDER: ${{ secrets.ETHEREUM_PROVIDER }}
  ETHEREUM_MNEMONIC: ${{ secrets.ETHEREUM_MNEMONIC }}
  ETHEREUM_PRIVATE_KEY: ${{ secrets.ETHEREUM_PRIVATE_KEY }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Cloud SDK
        uses: google-github-actions/setup-gcloud@v0.2.0
        with:
          project_id: ${{ env.PROJECT_ID }}
          service_account_key: ${{ env.GCP_SA_KEY }}

      - name: Authorize Docker push
        run: gcloud auth configure-docker

      - name: Build and Push Container
        working-directory: ./packages/dashboard
        run: |
          gcloud builds submit \
            --quiet \
            --tag "gcr.io/$PROJECT_ID/$SERVICE:$GITHUB_SHA" \
            --timeout=1200s \
            --machine-type=n1-highcpu-32

      - name: Deploy to Cloud Run
        run: |-
          gcloud run deploy ${{ env.SERVICE }} \
            --region ${{ env.REGION }} \
            --image gcr.io/${{ env.PROJECT_ID }}/${{ env.SERVICE }}:${{  github.sha }} \
            --platform "managed" \
            --set-env-vars SIDETREE_METHOD="${{ env.SIDETREE_METHOD }}" \
            --set-env-vars MONGO_DB_CONNECTION_STRING="${{ env.MONGO_DB_CONNECTION_STRING }}" \
            --set-env-vars DATABASE_NAME="${{ env.DATABASE_NAME }}" \
            --set-env-vars MAX_CONCURRENT_DOWNLOADS="${{ env.MAX_CONCURRENT_DOWNLOADS }}" \
            --set-env-vars BATCH_INTERVAL_IN_SECONDS="${{ env.BATCH_INTERVAL_IN_SECONDS }}" \
            --set-env-vars OBSERVING_INTERVAL_IN_SECONDS="${{ env.OBSERVING_INTERVAL_IN_SECONDS }}" \
            --set-env-vars ELEMENT_CONTENT_ADDRESSABLE_STORE_SERVICE_URI="${{ env.ELEMENT_CONTENT_ADDRESSABLE_STORE_SERVICE_URI }}" \
            --set-env-vars ELEMENT_ANCHOR_CONTRACT="${{ env.ELEMENT_ANCHOR_CONTRACT }}" \
            --set-env-vars ETHEREUM_RPC_URL="${{ env.ETHEREUM_RPC_URL }}" \
            --set-env-vars ETHEREUM_PROVIDER="${{ env.ETHEREUM_PROVIDER }}" \
            --set-env-vars ETHEREUM_MNEMONIC="${{ env.ETHEREUM_MNEMONIC }}" \
            --set-env-vars ETHEREUM_PRIVATE_KEY="${{ env.ETHEREUM_PRIVATE_KEY }}" \
            --service-account "${{ env.GCP_RUNNER_SA }}" \
            --quiet
